<?php

/**
 * @file
 * Install, update and uninstall functions for the Windows Azure Storage module.
 * 
 * @author DylanLi
 */

use Drupal\Core\Database\Database;

/**
 * Implements hook_schema().
 */

function windows_azure_storage_schema() {
  $schema = [];

  $schema['windows_azure_storage_file'] = [
    'fields'      => [
      'id'        => [
        'type'        => 'serial',
        'description' => 'A database primary key to ensure uniqueness',
        'not null'    => TRUE,
      ],
      'container' => [
        'type'        => 'varchar',
        'length'      => '50',
        'description' => 'Windows Azure storage container.',
      ],
      'folder'    => [
        'type'        => 'varchar',
        'length'      => '50',
        'description' => 'Windows Azure storage container folder.',
      ],
      'name'      => [
        'type'        => 'varchar',
        'length'      => '50',
        'description' => 'Windows Azure storage file name.',
      ],
      'url'       => [
        'type'        => 'varchar',
        'length'      => '255',
        'description' => 'Windows Azure storage file url.',
      ],
    ],
    'primary key' => ['id'],
  ];

  return $schema;
}


/**
 * Implements hook_requirements().
 *
 * Checks for dependencies before installation.
 *
 * @param string $phase
 *   The phase in which requirements are checked:
 *   - install: The module is being installed
 *   - update: The module is enabled and update.php is run
 *   - runtime: The runtime requirements are being checked and shown on the
 *   status report page
 *
 * @return array
 *   An associative array where the keys are arbitrary but must be unique
 */
function windows_azure_storage_requirements($phase) {
  if ($phase === 'install') {
    $requirements = [];

    if (!ini_get('allow_url_fopen')) {
      $requirements['windows_azure_storage'] = [
        'title' => 'PHP setting for allow_url_fopen is Off',
        'description' => 'The Windows Azure SDK for PHP requires the PHP configuration setting "allow_url_fopen" to be On.',
        'severity' => REQUIREMENT_ERROR,
      ];

      return $requirements;
    }
  }
}

/**
 * Change {windows_azure_storage_file}.url length.
 */
function windows_azure_storage_update_8001() {
  $schema = Database::getConnection()->schema();
  $schema->changeField('windows_azure_storage_file', 'url', 'url', [
    'type'  => 'varchar',
    'length'  => '255',
    'description' => 'Windows Azure storage file url.',
  ]);
}
